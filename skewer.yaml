title: Skupper private to private
subtitle: Connecting services in isolated on-premises sites
github_actions_url: https://github.com/ssorj/skupper-example-private-to-private/actions/workflows/main.yaml
overview: |
  XXX
sites:
  private1:
    kubeconfig: ~/.kube/config-private1
    namespace: private1
  relay:
    kubeconfig: ~/.kube/config-relay
    namespace: relay
  private2:
    kubeconfig: ~/.kube/config-private2
    namespace: private2
steps:
  - standard: install_the_skupper_command_line_tool
  - standard: configure_separate_console_sessions
  - standard: access_your_clusters
  - standard: set_up_your_namespaces
  - standard: install_skupper_in_your_namespaces
  - standard: check_the_status_of_your_namespaces
  - title: Link your namespaces
    commands:
      relay:
        - run: skupper token create ~/relay1.token
        - run: skupper token create ~/relay2.token
      private1:
        - run: skupper link create ~/relay1.token
      private2:
        - run: skupper link create ~/relay2.token
  - title: Deploy the frontend and backend services
    preamble: |
      Use `kubectl create deployment` to deploy the frontend service
      in `private1` and the backend service in `private2`.
    commands:
      private1:
        - run: kubectl create deployment frontend --image quay.io/skupper/hello-world-frontend
          output: deployment.apps/frontend created
      private2:
        - run: kubectl create deployment backend --image quay.io/skupper/hello-world-backend --replicas 3
          output: deployment.apps/backend created
  - title: Expose the backend service
    preamble: |
      We now have two namespaces linked to form a Skupper network, but
      no services are exposed on it.  Skupper uses the `skupper
      expose` command to select a service from one namespace for
      exposure on all the linked namespaces.

      Use `skupper expose` to expose the backend service to the
      frontend service.
    commands:
      private2:
        - await: deployment/backend
        - run: skupper expose deployment/backend --port 8080
          output: deployment backend exposed as backend
  - title: Expose the frontend service
    preamble: |
      We have established connectivity between the two namespaces and
      made the backend in `private2` available to the frontend in
      `private1`.  Before we can test the application, we need
      external access to the frontend.

      Use `kubectl expose` with `--type LoadBalancer` to open network
      access to the frontend service.
    commands:
      private1:
        - await: deployment/frontend
        - run: kubectl expose deployment/frontend --port 8080 --type LoadBalancer
          output: service/frontend exposed
  - standard: test_the_application
  - standard: accessing_the_web_console
  - standard: cleaning_up
    commands:
      private1:
        - run: skupper delete
        - run: kubectl delete service/frontend
        - run: kubectl delete deployment/frontend
      relay:
        - run: skupper delete
      private2:
        - run: skupper delete
        - run: kubectl delete deployment/backend
